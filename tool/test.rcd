string = [i1];
ztring = string ;
/* this returns something */
bar(elements :[{/* documentation comment */ str: string, /* at predefined locations */id : u4 }]): i4 ;
 /* this is foo */ foo(num: i4, name:[i1] );
nop();
set(v: i2);
now(): u8;
name(): [i1];
ifs(): [{name:[i1] , id:i4 ,corr:u4}];
stupid(s: {s:i1}): {e:[{c:[{a:i1}]}]}; 

/* session */
session < !echo(v:string); @echo(v:string)  >;

/* function */ 
getChannels(): [string];

acquistion 
<
	/* ctor */
	start(channel: string);
	
	/* forward call */
	!set(property: string, value: string);
	!get(property: string);
	
	/* callback */
	@onPropertyValue(property: string, value: string);
	
	@onData(data:[u1]);
>;

/* typedef */
HostId = u4;
NetifId = u4;

tdp
<
	start(queryId: u4): {hostId: HostId, names: [string]};
	@onInterface(netifId: NetifId, ifNum: i4, names: [string]);
	@onPeer(hostId: HostId, v:string)
>;

